%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Friday, September 2, 2005 9:05:09 PM MDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
347 347 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 347.0 347.0 rf
0.0 0.0 0.0 RG
1.0 1.0 1.0 RG
0.0 0.0 347.0 347.0 rf
0.0 0.0 0.0 RG
1 J
1 j
newpath
294.314239 249.805603 m
294.314239 249.805603 l
S
newpath
39.899997 46.399997 m
39.899997 46.399997 l
S
newpath
45.038467 195.818527 m
45.038467 195.818527 l
S
newpath
202.258148 212.804656 m
202.258148 212.804656 l
S
newpath
307.100006 46.399997 m
307.100006 46.399997 l
S
newpath
307.100006 313.600006 m
307.100006 313.600006 l
S
newpath
39.899997 313.600006 m
39.899997 313.600006 l
S
newpath
300.887756 186.968521 m
300.887756 186.968521 l
S
newpath
39.899997 46.399997 m
39.899997 313.600006 l
S
newpath
307.100006 46.399997 m
39.899997 46.399997 l
S
newpath
307.100006 313.600006 m
307.100006 46.399997 l
S
newpath
39.899997 313.600006 m
307.100006 313.600006 l
S
newpath
112.727218 91.407096 m
112.727218 91.407096 l
S
newpath
60.034912 123.778060 m
60.034912 123.778060 l
S
newpath
173.998413 237.648193 m
173.998413 237.648193 l
S
newpath
252.860260 121.188705 m
252.860260 121.188705 l
S
newpath
153.894042 102.570549 m
153.894042 102.570549 l
S
newpath
286.266876 138.010620 m
286.266876 138.010620 l
S
newpath
222.239608 130.697479 m
222.239608 130.697479 l
S
newpath
176.596694 129.289352 m
176.596694 129.289352 l
S
newpath
102.258178 95.724304 m
102.258178 95.724304 l
S
newpath
217.893768 240.414703 m
217.893768 240.414703 l
S
newpath
204.227127 156.472900 m
204.227127 156.472900 l
S
newpath
188.927322 161.844848 m
188.927322 161.844848 l
S
newpath
255.859680 120.347801 m
255.859680 120.347801 l
S
newpath
193.553024 189.036682 m
193.553024 189.036682 l
S
newpath
197.282775 195.991897 m
197.282775 195.991897 l
S
newpath
150.741394 100.104515 m
150.741394 100.104515 l
S
newpath
148.714675 262.732910 m
148.714675 262.732910 l
S
newpath
183.615722 221.650375 m
183.615722 221.650375 l
S
newpath
209.027572 226.601867 m
209.027572 226.601867 l
S
newpath
224.669021 128.208160 m
224.669021 128.208160 l
S
newpath
166.293090 251.662368 m
166.293090 251.662368 l
S
newpath
229.771560 249.576095 m
229.771560 249.576095 l
S
newpath
174.789031 125.902450 m
174.789031 125.902450 l
S
newpath
246.810012 253.239364 m
246.810012 253.239364 l
S
newpath
130.346923 269.906616 m
130.346923 269.906616 l
S
newpath
265.122222 248.538970 m
265.122222 248.538970 l
S
newpath
205.680206 153.075256 m
205.680206 153.075256 l
S
newpath
81.998153 262.840270 m
81.998153 262.840270 l
S
newpath
291.561553 225.938552 m
291.561553 225.938552 l
S
newpath
187.901489 158.080078 m
187.901489 158.080078 l
S
newpath
50.225612 217.558502 m
50.225612 217.558502 l
S
newpath
301.704010 166.278228 m
301.704010 166.278228 l
S
newpath
194.673431 185.353027 m
194.673431 185.353027 l
S
newpath
49.544094 133.529327 m
49.544094 133.529327 l
S
newpath
288.775695 103.818977 m
288.775695 103.818977 l
S
newpath
196.346145 192.239486 m
196.346145 192.239486 l
S
newpath
287.296997 266.056213 m
287.296997 266.056213 l
S
newpath
46.985691 222.903945 m
46.985691 222.903945 l
S
newpath
184.921066 218.009292 m
184.921066 218.009292 l
S
newpath
301.307647 203.906707 m
301.307647 203.906707 l
S
newpath
52.928886 139.375167 m
52.928886 139.375167 l
S
newpath
207.446136 223.321456 m
207.446136 223.321456 l
S
newpath
292.747161 152.004989 m
292.747161 152.004989 l
S
newpath
90.940170 97.867050 m
90.940170 97.867050 l
S
newpath
168.660034 248.597290 m
168.660034 248.597290 l
S
newpath
264.552825 122.115310 m
264.552825 122.115310 l
S
newpath
140.261718 96.094306 m
140.261718 96.094306 l
S
newpath
227.174194 247.336090 m
227.174194 247.336090 l
S
newpath
232.433670 124.857864 m
232.433670 124.857864 l
S
newpath
168.559982 118.672325 m
168.559982 118.672325 l
S
newpath
134.183532 268.262298 m
134.183532 268.262298 l
S
newpath
210.308624 146.567153 m
210.308624 146.567153 l
S
newpath
184.718811 149.302551 m
184.718811 149.302551 l
S
newpath
258.718811 253.630371 m
258.718811 253.630371 l
S
newpath
197.178878 176.377944 m
197.178878 176.377944 l
S
newpath
194.245971 183.061340 m
194.245971 183.061340 l
S
newpath
90.969848 269.444183 m
90.969848 269.444183 l
S
newpath
187.124984 209.742340 m
187.124984 209.742340 l
S
newpath
204.656051 214.737808 m
204.656051 214.737808 l
S
newpath
290.010772 227.071182 m
290.010772 227.071182 l
S
newpath
171.932495 240.900192 m
171.932495 240.900192 l
S
newpath
220.070495 243.158309 m
220.070495 243.158309 l
S
newpath
51.270385 219.268432 m
51.270385 219.268432 l
S
newpath
145.305175 264.977966 m
145.305175 264.977966 l
S
newpath
249.806503 254.414367 m
249.806503 254.414367 l
S
newpath
301.777099 176.364883 m
301.777099 176.364883 l
S
newpath
102.297248 271.579193 m
102.297248 271.579193 l
S
newpath
282.389221 240.271942 m
282.389221 240.271942 l
S
newpath
47.502555 144.541885 m
47.502555 144.541885 l
S
newpath
57.310894 235.302978 m
57.310894 235.302978 l
S
newpath
300.455871 193.173904 m
300.455871 193.173904 l
S
newpath
293.347625 113.321640 m
293.347625 113.321640 l
S
newpath
45.296897 171.565887 m
45.296897 171.565887 l
S
newpath
298.204162 130.077728 m
298.204162 130.077728 l
S
newpath
138.255966 54.344814 m
138.255966 54.344814 l
S
newpath
76.210289 81.971801 m
76.210289 81.971801 l
S
newpath
252.858276 66.880920 m
252.858276 66.880920 l
S
newpath
195.309173 51.538467 m
195.309173 51.538467 l
S
newpath
267.609680 289.581268 m
267.609680 289.581268 l
S
newpath
53.105403 251.486907 m
53.105403 251.486907 l
S
newpath
280.952636 275.089538 m
280.952636 275.089538 l
S
newpath
300.412109 222.947738 m
300.412109 222.947738 l
S
newpath
46.804809 166.952636 m
46.804809 166.952636 l
S
newpath
46.886062 224.972702 m
46.886062 224.972702 l
S
newpath
298.073699 168.851547 m
298.073699 168.851547 l
S
newpath
72.955207 109.015640 m
72.955207 109.015640 l
S
newpath
300.629547 213.982040 m
300.629547 213.982040 l
S
newpath
277.973480 131.977294 m
277.973480 131.977294 l
S
newpath
124.855049 92.049804 m
124.855049 92.049804 l
S
newpath
50.140232 149.784408 m
50.140232 149.784408 l
S
newpath
243.904617 121.338264 m
243.904617 121.338264 l
S
newpath
162.588531 108.175804 m
162.588531 108.175804 l
S
newpath
294.084930 153.297866 m
294.084930 153.297866 l
S
newpath
218.071838 138.043197 m
218.071838 138.043197 l
S
newpath
181.248779 137.366455 m
181.248779 137.366455 l
S
newpath
87.483612 97.990577 m
87.483612 97.990577 l
S
newpath
201.499908 165.182235 m
201.499908 165.182235 l
S
newpath
191.382263 170.932632 m
191.382263 170.932632 l
S
newpath
267.345245 121.897705 m
267.345245 121.897705 l
S
newpath
191.238571 197.185821 m
191.238571 197.185821 l
S
newpath
199.963333 203.845947 m
199.963333 203.845947 l
S
newpath
136.600173 94.198219 m
136.600173 94.198219 l
S
newpath
179.336090 229.916427 m
179.336090 229.916427 l
S
newpath
214.214782 232.643325 m
214.214782 232.643325 l
S
newpath
235.230895 122.917266 m
235.230895 122.917266 l
S
newpath
158.215408 257.740295 m
158.215408 257.740295 l
S
newpath
238.019409 252.099014 m
238.019409 252.099014 l
S
newpath
166.200515 115.605888 m
166.200515 115.605888 l
S
newpath
118.290832 271.255767 m
118.290832 271.255767 l
S
newpath
273.133361 245.325912 m
273.133361 245.325912 l
S
newpath
212.143951 143.471313 m
212.143951 143.471313 l
S
newpath
72.987442 258.306396 m
72.987442 258.306396 l
S
newpath
296.578582 210.898925 m
296.578582 210.898925 l
S
newpath
183.430999 145.652770 m
183.430999 145.652770 l
S
newpath
46.933135 200.401092 m
46.933135 200.401092 l
S
newpath
301.961517 157.333908 m
301.961517 157.333908 l
S
newpath
198.300140 172.725997 m
198.300140 172.725997 l
S
newpath
54.112026 116.080078 m
54.112026 116.080078 l
S
newpath
278.842681 88.318565 m
278.842681 88.318565 l
S
newpath
193.308151 179.284347 m
193.308151 179.284347 l
S
newpath
234.878814 308.461517 m
234.878814 308.461517 l
S
newpath
73.874549 285.967132 m
73.874549 285.967132 l
S
newpath
188.337890 206.066329 m
188.337890 206.066329 l
S
newpath
71.202545 285.967132 m
76.546546 285.967132 l
S
newpath
188.337890 208.738342 m
188.337890 203.394332 l
S
newpath
294.314239 252.477600 m
294.314239 247.133605 l
S
newpath
185.665893 206.066329 m
191.009887 206.066329 l
S
newpath
60.034912 126.450057 m
60.034912 121.106071 l
S
newpath
291.642242 249.805603 m
296.986236 249.805603 l
S
newpath
46.872089 133.529327 m
52.216083 133.529327 l
S
newpath
301.777099 179.036880 m
301.777099 173.692871 l
S
newpath
45.038467 198.490524 m
45.038467 193.146514 l
S
newpath
42.366466 195.818527 m
47.710456 195.818527 l
S
newpath
202.258148 215.476669 m
202.258148 210.132675 l
S
newpath
300.887756 189.640518 m
300.887756 184.296508 l
S
newpath
199.586135 212.804656 m
204.930145 212.804656 l
S
newpath
298.215728 186.968521 m
303.559722 186.968521 l
S
newpath
44.830543 144.541885 m
50.174545 144.541885 l
S
newpath
54.638900 235.302978 m
59.982894 235.302978 l
S
newpath
112.727218 94.079101 m
112.727218 88.735099 l
S
newpath
110.055206 91.407096 m
115.399208 91.407096 l
S
newpath
293.347625 115.993637 m
293.347625 110.649635 l
S
newpath
252.860260 123.860702 m
252.860260 118.516700 l
S
newpath
57.362911 123.778060 m
62.706905 123.778060 l
S
newpath
250.188247 121.188705 m
255.532257 121.188705 l
S
newpath
42.624897 171.565887 m
47.968902 171.565887 l
S
newpath
173.998413 240.320175 m
173.998413 234.976181 l
S
newpath
209.027572 229.273849 m
209.027572 223.929855 l
S
newpath
151.222045 102.570549 m
156.566055 102.570549 l
S
newpath
171.326416 237.648193 m
176.670410 237.648193 l
S
newpath
222.239608 133.369476 m
222.239608 128.025482 l
S
newpath
227.174194 250.008102 m
227.174194 244.664093 l
S
newpath
195.309173 54.210464 m
195.309173 48.866462 l
S
newpath
264.937683 289.581268 m
270.281677 289.581268 l
S
newpath
176.596694 131.961349 m
176.596694 126.617347 l
S
newpath
173.924697 129.289352 m
179.268707 129.289352 l
S
newpath
102.258178 98.396308 m
102.258178 93.052314 l
S
newpath
153.894042 105.242553 m
153.894042 99.898544 l
S
newpath
190.881027 189.036682 m
196.225036 189.036682 l
S
newpath
204.227127 159.144897 m
204.227127 153.800903 l
S
newpath
99.586166 95.724304 m
104.930168 95.724304 l
S
newpath
207.446136 225.993438 m
207.446136 220.649444 l
S
newpath
278.280639 275.089538 m
283.624633 275.089538 l
S
newpath
297.740112 222.947738 m
303.084106 222.947738 l
S
newpath
217.893768 243.086700 m
217.893768 237.742721 l
S
newpath
186.255340 161.844848 m
191.599349 161.844848 l
S
newpath
215.221786 240.414703 m
220.565765 240.414703 l
S
newpath
255.859680 123.019813 m
255.859680 117.675811 l
S
newpath
193.553024 191.708679 m
193.553024 186.364669 l
S
newpath
295.401702 168.851547 m
300.745697 168.851547 l
S
newpath
197.282775 198.663909 m
197.282775 193.319885 l
S
newpath
286.266876 140.682632 m
286.266876 135.338623 l
S
newpath
194.610778 195.991897 m
199.954757 195.991897 l
S
newpath
297.957550 213.982040 m
303.301574 213.982040 l
S
newpath
275.301452 131.977294 m
280.645477 131.977294 l
S
newpath
261.880828 122.115310 m
267.224822 122.115310 l
S
newpath
50.140232 152.456405 m
50.140232 147.112396 l
S
newpath
183.615722 224.322387 m
183.615722 218.978393 l
S
newpath
148.069381 100.104515 m
153.413391 100.104515 l
S
newpath
180.943725 221.650375 m
186.287704 221.650375 l
S
newpath
253.187683 120.347801 m
258.531677 120.347801 l
S
newpath
148.714675 265.404907 m
148.714675 260.060913 l
S
newpath
206.355560 226.601867 m
211.699554 226.601867 l
S
newpath
146.042663 262.732910 m
151.386672 262.732910 l
S
newpath
166.293090 254.334381 m
166.293090 248.990371 l
S
newpath
291.412933 153.297866 m
296.756927 153.297866 l
S
newpath
215.399826 138.043197 m
220.743820 138.043197 l
S
newpath
229.771560 252.248107 m
229.771560 246.904098 l
S
newpath
227.099563 249.576095 m
232.443572 249.576095 l
S
newpath
201.555114 156.472900 m
206.899124 156.472900 l
S
newpath
87.483612 100.662574 m
87.483612 95.318580 l
S
newpath
130.346923 272.578613 m
130.346923 267.234619 l
S
newpath
172.117034 125.902450 m
177.461029 125.902450 l
S
newpath
198.827896 165.182235 m
204.171905 165.182235 l
S
newpath
246.810012 255.911361 m
246.810012 250.567352 l
S
newpath
265.122222 251.210983 m
265.122222 245.866989 l
S
newpath
188.566558 197.185821 m
193.910568 197.185821 l
S
newpath
207.636611 146.567153 m
212.980606 146.567153 l
S
newpath
136.600173 96.870216 m
136.600173 91.526214 l
S
newpath
262.450195 248.538970 m
267.794219 248.538970 l
S
newpath
244.138031 253.239364 m
249.482025 253.239364 l
S
newpath
205.680206 155.747253 m
205.680206 150.403259 l
S
newpath
219.567611 130.697479 m
224.911590 130.697479 l
S
newpath
174.789031 128.574447 m
174.789031 123.230445 l
S
newpath
81.998153 265.512268 m
81.998153 260.168243 l
S
newpath
176.664077 229.916427 m
182.008087 229.916427 l
S
newpath
291.561553 228.610565 m
291.561553 223.266540 l
S
newpath
288.889587 225.938552 m
294.233551 225.938552 l
S
newpath
258.718811 256.302368 m
258.718811 250.958374 l
S
newpath
232.558883 122.917266 m
237.902877 122.917266 l
S
newpath
155.543411 257.740295 m
160.887420 257.740295 l
S
newpath
50.225612 220.230499 m
50.225612 214.886520 l
S
newpath
185.229492 158.080078 m
190.573501 158.080078 l
S
newpath
283.594879 138.010620 m
288.938873 138.010620 l
S
newpath
301.704010 168.950225 m
301.704010 163.606216 l
S
newpath
299.032012 166.278228 m
304.376037 166.278228 l
S
newpath
194.673431 188.025039 m
194.673431 182.681030 l
S
newpath
115.618843 271.255767 m
120.962837 271.255767 l
S
newpath
49.544094 136.201324 m
49.544094 130.857330 l
S
newpath
209.471939 143.471313 m
214.815948 143.471313 l
S
newpath
70.315437 258.306396 m
75.659439 258.306396 l
S
newpath
288.775695 106.490982 m
288.775695 101.146980 l
S
newpath
286.103698 103.818977 m
291.447692 103.818977 l
S
newpath
196.346145 194.911499 m
196.346145 189.567504 l
S
newpath
224.669021 130.880157 m
224.669021 125.536148 l
S
newpath
184.453002 209.742340 m
189.796997 209.742340 l
S
newpath
183.430999 148.324783 m
183.430999 142.980773 l
S
newpath
287.296997 268.728179 m
287.296997 263.384216 l
S
newpath
193.674133 192.239486 m
199.018142 192.239486 l
S
newpath
46.985691 225.575942 m
46.985691 220.231964 l
S
newpath
44.313690 222.903945 m
49.657691 222.903945 l
S
newpath
184.921066 220.681274 m
184.921066 215.337295 l
S
newpath
301.307647 206.578689 m
301.307647 201.234695 l
S
newpath
195.628128 172.725997 m
200.972137 172.725997 l
S
newpath
51.440025 116.080078 m
56.784027 116.080078 l
S
newpath
52.928886 142.047164 m
52.928886 136.703170 l
S
newpath
221.997039 128.208160 m
227.341033 128.208160 l
S
newpath
50.256885 139.375167 m
55.600891 139.375167 l
S
newpath
193.308151 181.956359 m
193.308151 176.612350 l
S
newpath
232.206802 308.461517 m
237.550796 308.461517 l
S
newpath
292.747161 154.676986 m
292.747161 149.332992 l
S
newpath
204.774154 223.321456 m
210.118148 223.321456 l
S
newpath
290.075164 152.004989 m
295.419189 152.004989 l
S
newpath
203.008209 153.075256 m
208.352188 153.075256 l
S
newpath
90.940170 100.539054 m
90.940170 95.195053 l
S
newpath
88.268157 97.867050 m
93.612167 97.867050 l
S
newpath
168.660034 251.269287 m
168.660034 245.925277 l
S
newpath
264.552825 124.787315 m
264.552825 119.443313 l
S
newpath
140.261718 98.766304 m
140.261718 93.422309 l
S
newpath
188.927322 164.516845 m
188.927322 159.172851 l
S
newpath
137.589721 96.094306 m
142.933715 96.094306 l
S
newpath
232.433670 127.529853 m
232.433670 122.185859 l
S
newpath
224.502197 247.336090 m
229.846191 247.336090 l
S
newpath
168.559982 121.344314 m
168.559982 116.000312 l
S
newpath
165.887985 118.672325 m
171.231979 118.672325 l
S
newpath
134.183532 270.934295 m
134.183532 265.590301 l
S
newpath
210.308624 149.239151 m
210.308624 143.895156 l
S
newpath
131.511535 268.262298 m
136.855545 268.262298 l
S
newpath
184.718811 151.974563 m
184.718811 146.630554 l
S
newpath
182.046813 149.302551 m
187.390808 149.302551 l
S
newpath
197.178878 179.049926 m
197.178878 173.705932 l
S
newpath
256.046783 253.630371 m
261.390808 253.630371 l
S
newpath
194.506866 176.377944 m
199.850875 176.377944 l
S
newpath
194.245971 185.733337 m
194.245971 180.389343 l
S
newpath
191.573959 183.061340 m
196.917968 183.061340 l
S
newpath
90.969848 272.116210 m
90.969848 266.772186 l
S
newpath
187.124984 212.414352 m
187.124984 207.070358 l
S
newpath
204.656051 217.409805 m
204.656051 212.065795 l
S
newpath
201.984054 214.737808 m
207.328063 214.737808 l
S
newpath
290.010772 229.743179 m
290.010772 224.399185 l
S
newpath
150.741394 102.776519 m
150.741394 97.432510 l
S
newpath
298.635681 203.906707 m
303.979675 203.906707 l
S
newpath
171.932495 243.572204 m
171.932495 238.228210 l
S
newpath
287.338806 227.071182 m
292.682800 227.071182 l
S
newpath
220.070495 245.830307 m
220.070495 240.486312 l
S
newpath
217.398483 243.158309 m
222.742492 243.158309 l
S
newpath
51.270385 221.940444 m
51.270385 216.596435 l
S
newpath
145.305175 267.649963 m
145.305175 262.305969 l
S
newpath
249.806503 257.086364 m
249.806503 251.742370 l
S
newpath
192.001434 185.353027 m
197.345413 185.353027 l
S
newpath
247.134490 254.414367 m
252.478500 254.414367 l
S
newpath
102.297248 274.251220 m
102.297248 268.907226 l
S
newpath
299.105102 176.364883 m
304.449096 176.364883 l
S
newpath
99.625244 271.579193 m
104.969238 271.579193 l
S
newpath
182.249084 218.009292 m
187.593063 218.009292 l
S
newpath
282.389221 242.943939 m
282.389221 237.599929 l
S
newpath
279.717193 240.271942 m
285.061218 240.271942 l
S
newpath
47.502555 147.213897 m
47.502555 141.869888 l
S
newpath
57.310894 237.974975 m
57.310894 232.630966 l
S
newpath
300.455871 195.845916 m
300.455871 190.501922 l
S
newpath
297.783874 193.173904 m
303.127868 193.173904 l
S
newpath
284.624969 266.056213 m
289.968994 266.056213 l
S
newpath
45.296897 174.237899 m
45.296897 168.893890 l
S
newpath
290.675628 113.321640 m
296.019653 113.321640 l
S
newpath
298.204162 132.749725 m
298.204162 127.405738 l
S
newpath
295.532135 130.077728 m
300.876159 130.077728 l
S
newpath
138.255966 57.016807 m
138.255966 51.672809 l
S
newpath
76.210289 84.643798 m
76.210289 79.299812 l
S
newpath
135.583969 54.344814 m
140.927963 54.344814 l
S
newpath
73.538284 81.971801 m
78.882286 81.971801 l
S
newpath
252.858276 69.552917 m
252.858276 64.208915 l
S
newpath
250.186264 66.880920 m
255.530258 66.880920 l
S
newpath
267.609680 292.253265 m
267.609680 286.909271 l
S
newpath
192.637191 51.538467 m
197.981170 51.538467 l
S
newpath
163.621109 251.662368 m
168.965103 251.662368 l
S
newpath
53.105403 254.158905 m
53.105403 248.814895 l
S
newpath
50.433414 251.486907 m
55.777404 251.486907 l
S
newpath
280.952636 277.761566 m
280.952636 272.417572 l
S
newpath
300.412109 225.619750 m
300.412109 220.275741 l
S
newpath
46.804809 169.624649 m
46.804809 164.280639 l
S
newpath
44.132808 166.952636 m
49.476810 166.952636 l
S
newpath
46.886062 227.644699 m
46.886062 222.300689 l
S
newpath
127.674934 269.906616 m
133.018936 269.906616 l
S
newpath
298.073699 171.523544 m
298.073699 166.179534 l
S
newpath
44.214069 224.972702 m
49.558074 224.972702 l
S
newpath
72.955207 111.687637 m
72.955207 106.343635 l
S
newpath
70.283203 109.015640 m
75.627197 109.015640 l
S
newpath
300.629547 216.654037 m
300.629547 211.310058 l
S
newpath
277.973480 134.649291 m
277.973480 129.305297 l
S
newpath
124.855049 94.721809 m
124.855049 89.377807 l
S
newpath
165.988037 248.597290 m
171.332031 248.597290 l
S
newpath
122.183052 92.049804 m
127.527053 92.049804 l
S
newpath
243.904617 124.010261 m
243.904617 118.666267 l
S
newpath
47.468242 149.784408 m
52.812248 149.784408 l
S
newpath
241.232635 121.338264 m
246.576629 121.338264 l
S
newpath
47.553600 217.558502 m
52.897605 217.558502 l
S
newpath
162.588531 110.847808 m
162.588531 105.503807 l
S
newpath
159.916534 108.175804 m
165.260543 108.175804 l
S
newpath
294.084930 155.969863 m
294.084930 150.625854 l
S
newpath
218.071838 140.715209 m
218.071838 135.371200 l
S
newpath
181.248779 140.038452 m
181.248779 134.694458 l
S
newpath
178.576766 137.366455 m
183.920761 137.366455 l
S
newpath
229.761672 124.857864 m
235.105651 124.857864 l
S
newpath
201.499908 167.854232 m
201.499908 162.510238 l
S
newpath
84.811607 97.990577 m
90.155609 97.990577 l
S
newpath
191.382263 173.604614 m
191.382263 168.260620 l
S
newpath
188.710266 170.932632 m
194.054275 170.932632 l
S
newpath
267.345245 124.569702 m
267.345245 119.225700 l
S
newpath
191.238571 199.857818 m
191.238571 194.513809 l
S
newpath
264.673278 121.897705 m
270.017272 121.897705 l
S
newpath
199.963333 206.517944 m
199.963333 201.173934 l
S
newpath
197.291336 203.845947 m
202.635345 203.845947 l
S
newpath
179.336090 232.588424 m
179.336090 227.244430 l
S
newpath
133.928161 94.198219 m
139.272155 94.198219 l
S
newpath
79.326156 262.840270 m
84.670158 262.840270 l
S
newpath
214.214782 235.315322 m
214.214782 229.971328 l
S
newpath
211.542785 232.643325 m
216.886764 232.643325 l
S
newpath
235.230895 125.589256 m
235.230895 120.245262 l
S
newpath
158.215408 260.412292 m
158.215408 255.068298 l
S
newpath
238.019409 254.771026 m
238.019409 249.427001 l
S
newpath
235.347412 252.099014 m
240.691421 252.099014 l
S
newpath
166.200515 118.277885 m
166.200515 112.933883 l
S
newpath
187.901489 160.752075 m
187.901489 155.408081 l
S
newpath
142.633163 264.977966 m
147.977157 264.977966 l
S
newpath
118.290832 273.927764 m
118.290832 268.583770 l
S
newpath
163.528503 115.605888 m
168.872497 115.605888 l
S
newpath
273.133361 247.997894 m
273.133361 242.653900 l
S
newpath
270.461395 245.325912 m
275.805389 245.325912 l
S
newpath
212.143951 146.143310 m
212.143951 140.799316 l
S
newpath
72.987442 260.978363 m
72.987442 255.634368 l
S
newpath
296.578582 213.570938 m
296.578582 208.226928 l
S
newpath
293.906555 210.898925 m
299.250579 210.898925 l
S
newpath
88.297859 269.444183 m
93.641860 269.444183 l
S
newpath
48.598392 219.268432 m
53.942398 219.268432 l
S
newpath
301.961517 160.005905 m
301.961517 154.661895 l
S
newpath
198.300140 175.397994 m
198.300140 170.054000 l
S
newpath
54.112026 118.752075 m
54.112026 113.408081 l
S
newpath
169.260482 240.900192 m
174.604507 240.900192 l
S
newpath
190.636169 179.284347 m
195.980163 179.284347 l
S
newpath
73.874549 288.639099 m
73.874549 283.295104 l
S
newpath
46.933135 203.073089 m
46.933135 197.729080 l
S
newpath
180.759002 145.652770 m
186.103012 145.652770 l
S
newpath
44.261135 200.401092 m
49.605136 200.401092 l
S
newpath
299.289550 157.333908 m
304.633544 157.333908 l
S
newpath
278.842681 90.990562 m
278.842681 85.646560 l
S
newpath
276.170684 88.318565 m
281.514678 88.318565 l
S
newpath
234.878814 311.133544 m
234.878814 305.789550 l
S
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
17.0 116.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
11.0 80.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0007\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
119.0 332.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000-\0000\000.\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
-8.0 184.0 moveto
q 1 -1 scale
/Serif-Italic findfont 12.0 scalefont setfont
(\000q\0001) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
11.0 152.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0002\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
8.0 223.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000-\0000\000.\0002\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
168.0 350.0 moveto
q 1 -1 scale
/Serif-Italic findfont 12.0 scalefont setfont
(\000p\0001) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
225.0 332.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
172.0 332.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0000) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
14.0 259.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000-\0000\000.\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
66.0 332.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000-\0001\000.\0000) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
8.0 294.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000-\0000\000.\0007\0005) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
278.0 332.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0001\000.\0000) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
17.0 187.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\0000\000.\0000) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
0.156863 0.156863 0.309804 RG
0.0 0.0 0.0 RG
newpath
75.103965 313.600006 m
75.103965 320.279998 l
S
newpath
39.899997 248.682952 m
35.224006 248.682952 l
S
newpath
39.899997 312.894561 m
35.224006 312.894561 l
S
newpath
117.209472 313.600006 m
117.209472 318.276000 l
S
newpath
39.899997 170.202087 m
35.224006 170.202087 l
S
newpath
39.899997 284.356048 m
35.224006 284.356048 l
S
newpath
190.894134 313.600006 m
190.894134 318.276000 l
S
newpath
39.899997 56.048099 m
35.224006 56.048099 l
S
newpath
39.899997 255.817565 m
33.220008 255.817565 l
S
newpath
39.899997 220.144439 m
33.220008 220.144439 l
S
newpath
39.899997 198.740570 m
35.224006 198.740570 l
S
newpath
39.899997 120.259712 m
35.224006 120.259712 l
S
newpath
306.684295 313.600006 m
306.684295 318.276000 l
S
newpath
39.899997 163.067443 m
35.224006 163.067443 l
S
newpath
254.052398 313.600006 m
254.052398 318.276000 l
S
newpath
39.899997 270.086791 m
35.224006 270.086791 l
S
newpath
85.630332 313.600006 m
85.630332 318.276000 l
S
newpath
39.899997 77.451972 m
33.220008 77.451972 l
S
newpath
39.899997 46.399997 m
39.899997 313.600006 l
S
newpath
39.899997 105.990455 m
35.224006 105.990455 l
S
newpath
39.899997 134.528961 m
35.224006 134.528961 l
S
newpath
232.999649 313.600006 m
232.999649 320.279998 l
S
newpath
39.899997 234.413681 m
35.224006 234.413681 l
S
newpath
39.899997 213.009811 m
35.224006 213.009811 l
S
newpath
39.899997 291.490692 m
33.220008 291.490692 l
S
newpath
275.105194 313.600006 m
275.105194 318.276000 l
S
newpath
39.899997 184.471328 m
33.220008 184.471328 l
S
newpath
54.051208 313.600006 m
54.051208 318.276000 l
S
newpath
39.899997 141.663589 m
35.224006 141.663589 l
S
newpath
39.899997 305.759918 m
35.224006 305.759918 l
S
newpath
285.631530 313.600006 m
285.631530 320.279998 l
S
newpath
201.420516 313.600006 m
201.420516 318.276000 l
S
newpath
211.946884 313.600006 m
211.946884 318.276000 l
S
newpath
39.899997 48.913475 m
35.224006 48.913475 l
S
newpath
96.156730 313.600006 m
96.156730 318.276000 l
S
newpath
39.899997 227.279067 m
35.224006 227.279067 l
S
newpath
39.899997 127.394332 m
35.224006 127.394332 l
S
newpath
39.899997 262.952209 m
35.224006 262.952209 l
S
newpath
39.899997 241.548324 m
35.224006 241.548324 l
S
newpath
39.899997 148.798202 m
33.220008 148.798202 l
S
newpath
39.899997 313.600006 m
39.899997 46.399997 l
S
newpath
148.788604 313.600006 m
148.788604 318.276000 l
S
newpath
39.899997 70.317352 m
35.224006 70.317352 l
S
newpath
39.899997 63.182720 m
35.224006 63.182720 l
S
newpath
222.473251 313.600006 m
222.473251 318.276000 l
S
newpath
180.367752 313.600006 m
180.367752 320.279998 l
S
newpath
39.899997 84.586593 m
35.224006 84.586593 l
S
newpath
296.157928 313.600006 m
296.157928 318.276000 l
S
newpath
43.524826 313.600006 m
43.524826 318.276000 l
S
newpath
169.841369 313.600006 m
169.841369 318.276000 l
S
newpath
159.314987 313.600006 m
159.314987 318.276000 l
S
newpath
39.899997 155.932830 m
35.224006 155.932830 l
S
newpath
39.899997 98.855850 m
35.224006 98.855850 l
S
newpath
307.100006 313.600006 m
307.100006 46.399997 l
S
newpath
243.526016 313.600006 m
243.526016 318.276000 l
S
newpath
138.262237 313.600006 m
138.262237 318.276000 l
S
newpath
39.899997 277.221435 m
35.224006 277.221435 l
S
newpath
307.100006 46.399997 m
39.899997 46.399997 l
S
newpath
39.899997 91.721214 m
35.224006 91.721214 l
S
newpath
127.735862 313.600006 m
127.735862 320.279998 l
S
newpath
39.899997 177.336700 m
35.224006 177.336700 l
S
newpath
39.899997 191.605957 m
35.224006 191.605957 l
S
newpath
39.899997 313.600006 m
307.100006 313.600006 l
S
newpath
64.577583 313.600006 m
64.577583 318.276000 l
S
newpath
39.899997 205.875198 m
35.224006 205.875198 l
S
newpath
264.578796 313.600006 m
264.578796 318.276000 l
S
newpath
39.899997 313.600006 m
307.100006 313.600006 l
S
newpath
39.899997 113.125091 m
33.220008 113.125091 l
S
newpath
39.899997 298.625305 m
35.224006 298.625305 l
S
newpath
106.683097 313.600006 m
106.683097 318.276000 l
S
128.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000H) show
Q
135.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000\240) show
Q
138.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000=) show
Q
144.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000\240) show
Q
147.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000.\0009\0009\0000\0000\0005\0000\0000\0000\0000\0000\000;) show
Q
213.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000\240) show
Q
216.0 10.0 moveto
q 1 -1 scale
/SansSerif findfont 10.0 scalefont setfont
(\000\240) show
Q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF